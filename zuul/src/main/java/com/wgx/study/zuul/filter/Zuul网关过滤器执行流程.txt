https://www.cnblogs.com/okong/p/springcloud-ten.html
https://www.jianshu.com/p/ff863d532767
过滤器是Zuul实现api网关功能最核心的部件，每一个进入zuul的http请求都会经过一系列的过滤器处理链得到请求响应并返回给客户端。
Zuul中定义了四种标准过滤器类型，这些过滤器类型对应于请求的典型生命周期
(1)外部http请求到达api网关服务的时候，首先它会进入第一个阶段pre，在这里它会被pre类型的过滤器进行处理。该类型过滤器的主要目的是在进行请求路由之前做一些前置加工，比如请求的校验等。
(2)在完成了pre类型的过滤器处理之后，请求进入第二个阶段routing，也就是之前说的【路由请求转发阶段】，请求将会被routing类型的处理器处理。这里的具体处理内容就是将外部请求转发到具体服务实例上去的过程。
   注意：这一阶段的核心过滤器是RibbonRoutingFilter，是routing阶段第一个执行的过滤器，它通过使用ribbon和hystrix来向服务实例发起请求，并将服务实例的请求结果返回。
         核心代码：ClientHttpResponse response = forward(commandContext);//注意这个返回值的类型，在网关的fallback中也出现了
(3)当服务实例请求结果都返回之后，routing阶段完成。请求进入第三个阶段post。此时请求将会被post类型的过滤器处理，这些过滤器在处理的时候不仅可以获取到请求信息，还能获取到服务实例的返回信息，所以在post类型的过滤器中，我们可以对处理结果进行一些加工或转换等内容。
(4)另外，还有一个特殊的阶段error，【该阶段只有在上述三个阶段中发生异常的时候才会触发，但是它的最后流向还是post类型的过滤器，因为它需要通过post过滤器将最终结果返回给请求客户端】。
   注意【】中的内容：
   ①ERROR过滤器只有在其他三个阶段出现异常时才会执行，这个异常特指的是过滤器(执行链)中出现的异常，与被调用的服务中是否出现异常无关。
     通过debug发现，无论被调用的服务中是否出现异常，RibbonRoutingFilter中的这行代码都会立即返回，过滤器(执行链)中没有出现异常，所以不会执行ERROR过滤器。
     ClientHttpResponse response = forward(commandContext);也会立即
   ②POST过滤器一定会执行，因为在POST过滤器中会完成返回给请求客户端的响应结果的封装。

网关的请求超时(网关的Ribbon配置)与fallback回调：
    网关向服务实例发起请求对应routing阶段，核心过滤器是RibbonRoutingFilter，核心代码是ClientHttpResponse response = forward(commandContext);
    以下均为debug的结果：
    (1)如果网关没有配置fallback回调，一旦网关请求超时(服务实例不可用或这接口执行时间过长)，上述方法就会抛出异常，执行ERROR过滤器 -> POST过滤器 -> 请求客户端
    (2)如果网关配置了fallback回调，一旦网关请求超时，就会执行fallback回调，返回ClientHttpResponse作为上述方法的返回值。因为过滤器(执行链)中没有出现异常，所以执行POST过滤器 -> 请求客户端



补充：
   ERROR过滤器的两种实现方式：
     (1)继承SendErrorFilter(ZuulFilter的默认实现类)(建议)，重写run方法。如果不想继续传递到SendErrorFilter中，可以重写filterOrder方法，设置自定义过滤器的优先级SendErrorFilter(数值为0)，并且在run方法中调用RequestContext对象的remove("throwable")方法，移除throwable属性的值(SendErrorFilter是否执行的判断依据是throwable属性的值是否存在)，也可以在配置文件中直接禁用掉SendErrorFilter(不推荐)。
     (2)继承ZuulFilter，其余同上。
     特别注意：如果pre、routing、post三个阶段中发生异常，那么ERROR过滤器就会按照优先级依次执行(Zuul的过滤器使用的是责任链模式，与run方法内部是否进行了try-catch处理无关)。所以如果不禁用掉SendErrorFilter过滤器并且也不希望它执行，那么必须在之前的ERROR过滤器的run方法中调用RequestContext对象的remove("throwable")方法，移除throwable属性的值。