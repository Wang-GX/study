@startuml
'声明用户:
actor 用户

'声明服务，数值越大，距离越远:
participant APP客户端 order 10
participant PC端 order 30
participant 后端服务器 order 50
participant Redis服务器 order 70

autonumber
PC端 -> 后端服务器 :向服务器请求登录二维码
后端服务器 -> 后端服务器 :服务器收到请求，生成随机字符串
后端服务器 -> Redis服务器 :服务器将生成的字符串作为key，同时设置二维码的有效期
后端服务器 -> PC端 :返回生成的字符串对应的二维码
PC端 -> PC端 :周期性地向服务器发起请求查询二维码状态
APP客户端 -> 后端服务器 :扫描二维码，得到随机字符串，向服务器发送APP端存储的token和随机字符串
后端服务器 -> 后端服务器 :解析token，获取用户账号，同时到数据库中查询用户密码
后端服务器 -> Redis服务器 :设置为随机字符串对应的value(这一步的目的是什么?)，更新二维码的状态
后端服务器 -> PC端 :根据用户信息生成token并返回
PC端 -> PC端 :登录成功
PC端 -> 后端服务器 :携带token，请求后端服务器
后端服务器 -> PC端 :响应请求


@enduml