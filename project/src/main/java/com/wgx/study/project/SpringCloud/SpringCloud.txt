Hystrix:
https://blog.csdn.net/tongtong_use/article/details/78611225?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-3
微服务中的雪崩问题：
在分布式的系统中，如果一个微服务不可用，而其他微服务还大量地调用这个不可用的微服务，也会导致其自身不可用，
之后又可能继续蔓延到其他与之相关的微服务上，这样就会导致更多的微服务不可用，最终导致整个分布式系统瘫痪。
说明：当请求阻塞时(阻塞指的是请求或者调用无法及时返回，例如超时或者未处理的异常)，客户端不会得到响应，服务器(tomcat)无法释放这个线程。随着请求的数量不断增大，阻塞的线程数量也越来越多。
      而服务器能够支持的线程数量和处理的并发数量有限，最终服务器的资源耗尽，导致所有服务都不可用，形成微服务雪崩现象。
处理方式：
(1)降级：通过设置请求或调用的超时时间以及配置降级方法进行快速响应
(2)熔断：通过熔断可以将后续的请求直接拒绝掉，一段时间之后允许部分请求通过，如果调用成功则关闭熔断，否则继续熔断。
   熔断器存在三种状态：关闭、打开、半开

Ribbon:
选举算法：